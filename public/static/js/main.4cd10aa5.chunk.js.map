{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","auth/LoginScreen.js","ui/Navbar.js","calendar/CalendarEvent.js","actions/ui.js","calendar/CalendarModal.js","types/AddNewFab.js","ui/DeleteeventFab.js","calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","chekingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","newState","handleInputchange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rEmail","rName","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","placeholder","onChange","Swal","fire","msg","Navbar","useSelector","state","auth","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","later","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","activeEvent","calendar","modalOpen","ui","formValues","setFormValues","useEffect","handleInputChange","closeModal","isOpen","closeTimeoutMS","onRequestClose","style","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteeventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","components","onSelectSlot","selectable","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4cd10aa5.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url)\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n\r\n            body: JSON.stringify(data),\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`\r\n\r\n    const token = localStorage.getItem('token') || ''\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token,\r\n            },\r\n        })\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token,\r\n            },\r\n\r\n            body: JSON.stringify(data),\r\n        })\r\n    }\r\n}\r\n","export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add New',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loaded',\r\n\r\n    authChecking: '[auth] Cheking login state',\r\n    authCheckingFinish: '[auth] Finish cheking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}\r\n","import moment from 'moment'\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(e => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }))\r\n}\r\n","import Swal from 'sweetalert2'\r\nimport {fetchWithToken} from '../helpers/fetch'\r\nimport {prepareEvents} from '../helpers/prepareEvents'\r\nimport {types} from '../types/types'\r\n\r\nexport const eventStartAddNew = event => {\r\n    return async (dispatch, getState) => {\r\n        const {uid, name} = getState().auth\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST')\r\n            const body = await resp.json()\r\n            if (body.ok) {\r\n                event.id = body.event.id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name,\r\n                }\r\n                dispatch(eventAddNew(event))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = event => ({\r\n    type: types.eventAddNew,\r\n    payload: event,\r\n})\r\n\r\nexport const eventSetActive = event => ({\r\n    type: types.eventSetActive,\r\n    payload: event,\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({type: types.eventClearActiveEvent})\r\n\r\nexport const eventStartUpdated = event => {\r\n    return async dispatch => {\r\n        try {\r\n            const resp = await fetchWithToken(\r\n                `events/${event.id}`,\r\n                event,\r\n                'PUT',\r\n            )\r\n            const body = await resp.json()\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event))\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = event => ({\r\n    type: types.eventUpdated,\r\n    payload: event,\r\n})\r\n\r\nexport const startEventDeleted = () => {\r\n    return async (dispatch, getState) => {\r\n        const {id} = getState().calendar.activeEvent\r\n\r\n        try {\r\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE')\r\n            const body = await resp.json()\r\n            if (body.ok) {\r\n                dispatch(eventDeleted())\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({type: types.eventDeleted})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const resp = await fetchWithToken('events')\r\n            const body = await resp.json()\r\n\r\n            const events = prepareEvents(body.events)\r\n\r\n            dispatch(eventLoaded(events))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventLoaded = events => ({\r\n    type: types.eventLoaded,\r\n    payload: events,\r\n})\r\n\r\nexport const eventLogout = () => ({type: types.eventLogout})\r\n","import Swal from 'sweetalert2'\r\nimport {fetchWithoutToken, fetchWithToken} from '../helpers/fetch'\r\nimport {types} from '../types/types'\r\nimport {eventLogout} from './events'\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async dispatch => {\r\n        const resp = await fetchWithoutToken('auth', {email, password}, 'POST')\r\n        const body = await resp.json()\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n        }\r\n\r\n        dispatch(\r\n            login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }),\r\n        )\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async dispatch => {\r\n        const resp = await fetchWithoutToken(\r\n            'auth/new',\r\n            {email, password, name},\r\n            'POST',\r\n        )\r\n        const body = await resp.json()\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                }),\r\n            )\r\n        } else {\r\n            return Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startCheking = () => {\r\n    return async dispatch => {\r\n        const resp = await fetchWithToken('auth/renew', {})\r\n        const body = await resp.json()\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                }),\r\n            )\r\n        } else {\r\n            dispatch(chekingFinish())\r\n        }\r\n    }\r\n}\r\n\r\nconst chekingFinish = () => ({type: types.authCheckingFinish})\r\n\r\nconst login = user => ({\r\n    type: types.authLogin,\r\n    payload: user,\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return dispatch => {\r\n        localStorage.clear()\r\n        dispatch(logout())\r\n        dispatch(eventLogout())\r\n    }\r\n}\r\n\r\nconst logout = () => ({type: types.authLogout})\r\n","import {useState} from 'react';\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = (newState = initialState) => {\r\n    setValues(newState);\r\n  };\r\n\r\n  const handleInputchange = ({target}) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputchange, reset];\r\n};\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport {startLogin, startRegister} from '../actions/auth'\r\nimport {useForm} from '../hooks/useForm'\r\nimport './login.css'\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'steven@gmail.com',\r\n        lPassword: '123456',\r\n    })\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rEmail: 'nando@gmail.com',\r\n        rName: 'nando',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    })\r\n\r\n    const {lEmail, lPassword} = formLoginValues\r\n    const {rEmail, rPassword1, rPassword2, rName} = formRegisterValues\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault()\r\n        dispatch(startLogin(lEmail, lPassword))\r\n    }\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault()\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Passwords are not same', 'error')\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword1, rName))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Sign In</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Register</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Name\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password Confirm\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"New account\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {startLogout} from '../actions/auth'\r\n\r\nexport const Navbar = () => {\r\n    const {name} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n            <button onClick={handleLogout} className=\"btn btn-outline-danger\">\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} = event\r\n    return (\r\n        <div>\r\n            <span> {title} </span>\r\n            <strong>- {user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import {types} from '../types/types'\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal,\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal,\r\n})\r\n","import React, {useEffect, useState} from 'react'\r\nimport Modal from 'react-modal'\r\nimport DateTimePicker from 'react-datetime-picker'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {uiCloseModal} from '../actions/ui'\r\nimport {\r\n    eventClearActiveEvent,\r\n    eventStartAddNew,\r\n    eventStartUpdated,\r\n} from '../actions/events'\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n}\r\n\r\nModal.setAppElement('#root')\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours')\r\nconst later = now.clone().add(1, 'hours')\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: later.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(later.toDate())\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n\r\n    const {title, notes, start, end} = formValues\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent)\r\n        } else {\r\n            setFormValues(initEvent)\r\n        }\r\n    }, [setFormValues, activeEvent])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value,\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal())\r\n        dispatch(eventClearActiveEvent())\r\n        setFormValues(initEvent)\r\n    }\r\n    const handleStartDateChange = e => {\r\n        setDateStart(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e,\r\n        })\r\n    }\r\n    const handleEndDateChange = e => {\r\n        setDateEnd(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e,\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = e => {\r\n        e.preventDefault()\r\n\r\n        const momentStart = moment(start)\r\n        const momentEnd = moment(end)\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire(\r\n                'Error',\r\n                'The end date must be greater than the start date',\r\n                'error',\r\n            )\r\n        }\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false)\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdated(formValues))\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues))\r\n        }\r\n\r\n        setTitleValid(true)\r\n        closeModal()\r\n    }\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            closeTimeoutMS={200}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {activeEvent ? 'Edit Event' : 'New Event'} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n                <div className=\"form-group\">\r\n                    <label>Start date and time</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>End date and time</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Title and notes</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${\r\n                            !titleValid && 'is-invalid'\r\n                        }`}\r\n                        placeholder=\"Title of event\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Description\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notes\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Additional Information\r\n                    </small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Save</span>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {uiOpenModal} from '../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n    return (\r\n        <button onClick={handleClickNew} className=\"btn btn-primary fab\">\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {startEventDeleted} from '../actions/events'\r\n\r\nexport const DeleteeventFab = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleEvent = () => {\r\n        dispatch(startEventDeleted())\r\n    }\r\n    return (\r\n        <button onClick={handleEvent} className=\"btn btn-danger fab-danger\">\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Delete event</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Navbar} from '../ui/Navbar'\r\n\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport {CalendarEvent} from './CalendarEvent'\r\nimport {CalendarModal} from './CalendarModal'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {uiOpenModal} from '../actions/ui'\r\nimport {\r\n    eventClearActiveEvent,\r\n    eventSetActive,\r\n    eventStartLoading,\r\n} from '../actions/events'\r\nimport {AddNewFab} from '../types/AddNewFab'\r\nimport {DeleteeventFab} from '../ui/DeleteeventFab'\r\n\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\nexport const CalendarScreen = () => {\r\n    const [lastView, setLastView] = useState(\r\n        localStorage.getItem('lastView') || 'month',\r\n    )\r\n\r\n    const dispatch = useDispatch()\r\n    const {uid} = useSelector(state => state.auth)\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: uid === event.user._id ? '#367CF7' : '#455660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n        }\r\n        return {\r\n            style,\r\n        }\r\n    }\r\n\r\n    const onDoubleClick = e => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    const onSelectEvent = e => {\r\n        dispatch(eventSetActive(e))\r\n    }\r\n\r\n    const onViewChange = e => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n    const onSelectSlot = () => {\r\n        dispatch(eventClearActiveEvent())\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{event: CalendarEvent}}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n            />\r\n            <AddNewFab />\r\n            {activeEvent && <DeleteeventFab />}\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Redirect, Route} from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={props =>\r\n                isAuthenticated ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Redirect, Route} from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={props =>\r\n                isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {BrowserRouter as Router, Switch, Redirect} from 'react-router-dom'\r\nimport {startCheking} from '../actions/auth'\r\nimport {LoginScreen} from '../auth/LoginScreen'\r\nimport {CalendarScreen} from '../calendar/CalendarScreen'\r\nimport {PrivateRoute} from './PrivateRoute'\r\nimport {PublicRoute} from './PublicRoute'\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch()\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startCheking())\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return <h2>Wait...</h2>\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <Redirect to=\"/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import {types} from '../types/types'\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {types} from '../types/types'\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Steven',\r\n//     },\r\n// },\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload,\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload],\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null,\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(e =>\r\n                    e.id === action.payload.id ? action.payload : e,\r\n                ),\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(e => e.id !== state.activeEvent.id),\r\n                activeEvent: null,\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload],\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {types} from '../types/types'\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {combineReducers, compose, createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {authReducer} from '../reducers/authReducer'\r\nimport {calendarReducer} from '../reducers/calendarReducer'\r\nimport {uiReducer} from '../reducers/uiReducer'\r\n\r\nconst composeEnhancers =\r\n    (typeof window !== 'undefined' &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose\r\n\r\nconst reducers = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk)),\r\n)\r\n","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport {AppRouter} from './router/AppRouter'\r\nimport {store} from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {CalendarApp} from './CalendarApp'\nimport './styles.css'\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'))\n"],"sourceRoot":""}